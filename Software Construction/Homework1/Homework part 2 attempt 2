

#include <iostream>
using namespace std;
#include <string>
using namespace std;

int main()
{
	string more = "yes";
	string msg;
	string messagebuffer1;
	string messagebuffer2;
	string output;
	size_t found1;
	size_t found2;
	int size;
	int users = 0;
	string name;
	string sub_buffer;
	while (more != "no")
	{
		users++;
		string username;
		string message;
		string groupname;
		cout << "\nEnter user name > ";
		getline(cin, username);
		username = username.substr(0, username.find(" "));
		cout << "Enter group name > ";
		getline(cin, groupname);
		groupname = groupname.substr(0, groupname.find(" "));
		if (groupname.at(0) != '#') 
		{
			groupname = "#" + groupname;
		}
		cout << "Enter the message > ";
		bool endmsg = false;
		messagebuffer2 = "";
		message = "";
		while (endmsg == false) 
		{
			getline(cin, messagebuffer2);
			if (messagebuffer2 != "^!") 
			{
				message += messagebuffer2 + "\n";
			}
			else 
			{
				endmsg = true;
			}
		}
		msg = messagebuffer1;
		messagebuffer1 = "<!" + username + ":" + groupname + "!>" + message;
		messagebuffer1 += msg;
		cout << "\nAny more users?";
		getline(cin, more);
		more = more.substr(0, more.find(" "));
		cout << "\n\n";
	}
	cout << "The current messages are >>\n" << endl;
	while (users != 0) 
	{
    		
		found1 = messagebuffer1.find("<!");
		found2 = messagebuffer1.find(":");
		size = static_cast<int>(found2) - static_cast<int>(found1);
		name = messagebuffer1.substr(found1 + 2, size - 2);
		output = name + " (";
		
		found1 = messagebuffer1.find("#");
		found2 = messagebuffer1.find("!>");
    		sub_buffer = messagebuffer1.substr(found1 - 2);
		found1 = sub_buffer.find("#");
		found2 = sub_buffer.find("!>");
		size = static_cast<int>(found2) - static_cast<int>(found1);
		name = sub_buffer.substr(found1 , size);
		output += name + ") >\n";
	
	
		found1 = messagebuffer1.find("!>");
		sub_buffer = messagebuffer1.substr(found1 + 2);
		if (users > 1) 
		{
			found2 = sub_buffer.find("<!");	
			name = sub_buffer.substr(0, found2);
			output += name;		
			found1 = messagebuffer1.find("!>");
			
			messagebuffer1 = messagebuffer1.substr(found1 + 1);
		}
		else
		{
			output += sub_buffer;
		}
		cout << output << endl;
		users--;

	}
	
	return 0;
}
